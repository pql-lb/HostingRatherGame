{"version":3,"sources":["components/images/avatars/dog.png","components/images/avatars/elephant.png","components/images/avatars/monkey.png","firebase.js","actions/receive.js","actions/questions.js","components/answered.js","actions/signup.js","actions/unanswered.js","actions/answered.js","actions/create.js","components/login.js","components/error.js","actions/votes.js","components/404.js","components/theLink.js","actions/format.js","components/addQuestion.js","components/leaderboard.js","components/create.js","components/App.js","reducers/index.js","reducers/signup.js","reducers/receive.js","reducers/loading.js","reducers/questions.js","reducers/unanswered.js","reducers/answered.js","reducers/create.js","middleware/index.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getData","dispatch","Promise","res","rej","database","ref","on","snapshot","items","val","newState","item","push","avatarURL","Object","values","name","id","answers","questions","then","users","type","receiveData","updateData","getQues","console","log","author","timestamp","optionOne","text","votes","optionTwo","QuestionList","state","answered","setState","prev","bg","colors","Math","floor","random","length","top","leftOne","leftTwo","scale","i","ceil","this","props","unanswered","className","Fragment","onClick","icon","faPlus","map","x","key","style","transform","marginTop","marginLeft","background","textDecoration","to","value","keys","splice","oneVotes","a","twoVotes","oneLengthNumber","twoLengthNumber","includes","signup","React","Component","connect","receive","signIn","user","signOut","unansweredQuestions","questionList","userList","answeredQuestions","answeredQ","routing","page","Login","y","createPage","login","e","document","getElementById","toSend","filter","setTimeout","handleMouseMove","clientX","clientY","small","smallY","medium","mediumY","large","largeY","onMouseMove","height","overflow","Error","saveQuestionAns","answer","reference","child","authedUser","qid","set","referenceTwo","all","data","voteHandle","Err404","AnsweredLink","avatars","elephant","dog","monkey","pushVote","selectedOpt","target","opp","theQues","match","params","opposite","catch","err","theQuestion","quesAuthor","avatar","src","alt","answeredVotesTwo","shift","answeredVotesOne","formattingEdit","ques","makeArray","questionCreated","formattedQuestion","optionOneText","optionTwoText","toFixed","Date","now","0","formatQuestionEdit","quesRef","addQuestion","submitted","btnPressed","update","submit","preventDefault","question","alert","onChange","placeholder","disabled","board","ordered","entries","sort","b","score","ans","CreateUser","nameclick","idclick","create","undefined","obj","toPush","itemsRef","clicked","handleAvatar","LoginPage","history","useHistory","from","useLocation","pathName","exact","path","replace","App","logout","PrivateRoute","component","rest","render","pathname","location","loading","basename","combineReducers","action","newStat","currentUserAnswers","userAnsList","newQuestionList","questionValues","flat","notAnswered","number","times","oldList","withoutDefault","questionListValues","emptyArray","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM"],"mappings":"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","file":"static/js/main.a3e1ed4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog.548a659c.png\";","module.exports = __webpack_public_path__ + \"static/media/elephant.2eaee86e.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.68a5aa10.png\";","import firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDeVXGKb6lmAajCQAWrBSEwDn6EEryc4DU\",\r\n    authDomain: \"prismatic-will-282317.firebaseapp.com\",\r\n    databaseURL: \"https://prismatic-will-282317.firebaseio.com\",\r\n    projectId: \"prismatic-will-282317\",\r\n    storageBucket: \"prismatic-will-282317.appspot.com\",\r\n    messagingSenderId: \"308378910178\",\r\n    appId: \"1:308378910178:web:473370f686443e583dcdbb\",\r\n    measurementId: \"G-STQG3QV8QY\"\r\n};\r\nfirebase.initializeApp(firebaseConfig)\r\nexport default firebase;","import firebase from '../firebase'\r\nexport const RECEIVE_DATA = 'RECEIVE_DATA'\r\n\r\nfunction receiveData(users) {\r\n    return {\r\n        type: RECEIVE_DATA,\r\n        users\r\n    }\r\n}\r\n\r\nexport function getData () {\r\n    return (dispatch) => {\r\n        return new Promise((res, rej) => {\r\n            const itemsRef = firebase.database().ref('items')\r\n            itemsRef.on('value', (snapshot) => {\r\n                let items = snapshot.val()\r\n                let newState = []\r\n                for (let item in items) {\r\n                    newState.push({\r\n                        avatarURL: Object.values(items[item])[0].avatarURL,\r\n                        name: Object.values(items[item])[0].name,\r\n                        id: Object.values(items[item])[0].id,\r\n                        answers: Object.values(items[item])[0].answers,\r\n                        questions: Object.values(items[item])[0].questions\r\n                    })\r\n                }\r\n                res(newState)\r\n            })\r\n        })\r\n        .then((users) => {\r\n            dispatch(receiveData(users))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function updateData () {\r\n        return new Promise((res, rej) => {\r\n            const itemsRef = firebase.database().ref('items')\r\n            itemsRef.on('value', (snapshot) => {\r\n                let items = snapshot.val()\r\n                let newState = []\r\n                for (let item in items) {\r\n                    //console.log(item, Object.values(items[item])[0] )\r\n                    newState.push({\r\n                        avatarURL: Object.values(items[item])[0].avatarURL,\r\n                        name: Object.values(items[item])[0].name,\r\n                        id: Object.values(items[item])[0].id,\r\n                        answers: Object.values(items[item])[0].answers,\r\n                        questions: Object.values(items[item])[0].questions\r\n                    })\r\n                }\r\n                res(newState)\r\n            })\r\n        })\r\n}\r\n\r\n","import firebase from '../firebase'\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\n\r\nfunction receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions\r\n    }\r\n}\r\n\r\nexport function getQues () {\r\n    console.log(\"getQues fired\")\r\n    return (dispatch) => {\r\n        new Promise((res, rej) => {\r\n            const itemsRef = firebase.database().ref('questions')\r\n            itemsRef.on('value', (snapshot) => {\r\n                let items = snapshot.val()\r\n                let newState = []\r\n                for (let item in items) {\r\n                    newState.push(\r\n                        { [items[item].id]: {\r\n                        author: items[item].author,\r\n                        id: items[item].id,\r\n                        timestamp: items[item].timestamp,\r\n                        optionOne: {\r\n                            text: items[item].optionOne.text,\r\n                            votes: [items[item].optionOne.votes]\r\n                        },\r\n                        optionTwo: {\r\n                            text: items[item].optionTwo.text,\r\n                            votes: [items[item].optionTwo.votes]\r\n                        }\r\n                    }})\r\n                }\r\n                res(dispatch(receiveQuestions(newState)))\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateQues () {\r\n    \r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass QuestionList extends React.Component {\r\n    state = {\r\n        answered: false,\r\n    }\r\n    answered = () => {\r\n        this.setState((prev) => ({\r\n            answered: !prev.answered\r\n        }))\r\n    }\r\n    bg = () => {\r\n        const colors = [\"#ffec82\", \"#ffec82\", \"#b866ff\", \"#54ecfd\", \"#b866ff\", \"#54ecfd\", \"#ffbce7\", \"#ffd7db\", \"#ffbce7\", \"#6b7fff\"]\r\n        let i = Math.floor(Math.random() * colors.length)\r\n        return colors[i]\r\n    }\r\n    top = () => {\r\n        let i = Math.floor(Math.random() * 150)\r\n        return i + \"px\"\r\n    }\r\n    leftOne = () => {\r\n        let i = Math.floor(Math.random() * 12.5) + 75\r\n        return i + \"%\"\r\n    }\r\n    leftTwo = () => {\r\n        let j = Math.floor(Math.random() * 50) \r\n        return - + j + \"px\"\r\n    }\r\n    scale = () => {\r\n        let i = Math.ceil(Math.random() * 15) + 8 \r\n        return `scale(${i/10})`\r\n    }\r\n    render () {\r\n        const {answered, unanswered} = this.props;\r\n        console.log(\"HOME LIST\", 'loaded')\r\n        if (this.props.answered === 0 && this.props.unanswered.length === 0) {\r\n            return (\r\n            <div className=\"aligner\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n            )\r\n        } else {\r\n        if (this.state.answered === false) {\r\n            if (unanswered.length === 0) {\r\n                return (\r\n                    <React.Fragment>\r\n                    <div className=\"answered\">\r\n                        <div className=\"row\">\r\n                            <button \r\n                            className=\"toggle colorSix moveUp\"\r\n                            onClick={() => this.answered()}\r\n                            >Answered</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cardAligner noQuestions\">\r\n                        <p>You've answered all the questions. Why not add another!</p>\r\n                        <FontAwesomeIcon \r\n                        // style={{position: 'absolute', marginLeft: '140px', color: 'rgb(123, 66, 255, 0.6)', fontSize: '50px', marginTop: '180px'}}\r\n                        icon={faPlus} />\r\n                    </div>\r\n                    </React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div className=\"answered\">\r\n                        <div className=\"row\">\r\n                            <button \r\n                            className=\"toggle colorSix\"\r\n                            onClick={() => this.answered()}\r\n                            >Answered</button>\r\n                        </div>\r\n                        <h1>Unanswered</h1>\r\n                        {this.props.unanswered.map((x,i) => {\r\n                        return (\r\n                            <div className=\"cardAligner\" key={x.timestamp}>\r\n                            <div style={{  transform: this.scale(), marginTop: this.top(), marginLeft: (i % 2) ? this.leftOne() : this.leftTwo() ,background: this.bg()  }} className=\"randomCircle\" />\r\n                            <Link style={{ textDecoration:'none' }} to={`/question/${x.id}`}>\r\n                                <h2 className=\"link\">Would You Rather...</h2>\r\n                            </Link>\r\n\r\n                            <div key={x.id} className=\"map\">\r\n                            <button \r\n                            value={x.optionOne.text}\r\n                            name={x.id}\r\n                            key={x.optionOne.text} \r\n                            className=\"cardMapMain\">\r\n                            {x.optionOne.text}\r\n                            </button>\r\n\r\n                            <button \r\n                            value={x.optionTwo.text}\r\n                            name={x.id}\r\n                            key={x.optionTwo.text}  \r\n                            className=\"cardMapMain\">\r\n                            {x.optionTwo.text}\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                )}\r\n    } else {\r\n        const optionOneVotes = this.props.answered.map(x => {\r\n            return Object.values(x.optionOne.votes).map(x => {\r\n                return Object.keys(x).splice(1)\r\n            })\r\n        })\r\n        const optionTwoVotes = this.props.answered.map(x => {\r\n            return Object.values(x.optionTwo.votes).map(x => {\r\n                return Object.keys(x).splice(1)\r\n            })\r\n        })\r\n        if (answered.length === 0) {\r\n            return (\r\n                <div className=\"answered\">\r\n                    <div className=\"row\">\r\n                        <button \r\n                        className=\"toggle colorSix\"\r\n                        onClick={() => this.answered()}\r\n                        >Answered</button>\r\n                    </div>\r\n                    <div className=\"noQuestions cardAligner\">\r\n                    <p>You've not answered any questions yet. Why not answer one now!</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n        return (\r\n        <div className=\"answered\">\r\n            <div className=\"row\">\r\n            <button \r\n            className=\"toggle colorSix\"\r\n            onClick={() => this.answered()}\r\n            >Unanswered</button>\r\n            </div>\r\n            <h1>Answered</h1>\r\n            {this.props.answered.map((x, i) => {\r\n                \r\n                    const oneVotes = Object.values(x.optionOne.votes).map(function(x) {\r\n                        return Object.keys(x).map(function(x, i, a){\r\n                            if (a.length === 1) { return \"No one yet!\" } \r\n                            else if (a.length > 1 && i > 0 && i < a.length - 1) { return x + \" & \" }\r\n                            else if (a.length > 1 && i === a.length - 1) { return x + \".\" }\r\n                            else { return \" \" }\r\n                        })\r\n                    })\r\n                    const twoVotes = Object.values(x.optionTwo.votes).map(function(x) {\r\n                        return Object.keys(x).map(function(x, i, a) {\r\n                            if (a.length === 1) { return \"No one yet!\" } \r\n                            else if (a.length > 1 && i > 0 && i < a.length - 1) { return x + \" & \" }\r\n                            else if (a.length > 1 && i === a.length - 1) { return x + \".\" }\r\n                            else { return \" \" }\r\n                        })\r\n                    })\r\n                    const oneLength =  Object.values(x.optionOne.votes).map(x => {\r\n                        return Object.keys(x)\r\n                    })\r\n                    const oneLengthNumber = oneLength[0].length - 1\r\n                    const twoLength =  Object.values(x.optionTwo.votes).map(x => {\r\n                        return Object.keys(x)\r\n                    })\r\n                    const twoLengthNumber = twoLength[0].length - 1\r\n                        return (\r\n                            <div key={x.timestamp}>\r\n                            <div style={{  transform: this.scale(), marginTop: this.top(), marginLeft: (i % 2) ? this.leftOne() : this.leftTwo() ,background: this.bg()  }} className=\"randomCircle\" />\r\n                            <h2>Would You Rather...</h2>\r\n      \r\n                            <div key={x.id} className=\"map\">\r\n                                <button \r\n                                key={x.optionOne.text} \r\n                                name={x.id}\r\n                                value={x.optionOne.text}\r\n                                className={(Object.keys(x.optionOne.votes[0]).includes(this.props.signup)) ? \"cardMapGreen\" : \"cardMap\"}\r\n                                >\r\n                                    {x.optionOne.text}\r\n                                    <br />\r\n                                    <br />\r\n                                    Voted for by: {oneVotes}\r\n                                    <br />\r\n                                    <br />\r\n                                    Out of {oneLengthNumber + twoLengthNumber} people who voted in this poll, {oneLengthNumber / (oneLengthNumber + twoLengthNumber) * 100 + \"%\"} chose this option!\r\n                                </button>\r\n\r\n                                <button \r\n                                key={x.optionTwo.text} \r\n                                name={x.id}\r\n                                value={x.optionTwo.text}\r\n                                className={(Object.keys(x.optionTwo.votes[0]).includes(this.props.signup)) ? \"cardMapGreen\" : \"cardMap\"}\r\n                                >\r\n                                    {x.optionTwo.text}\r\n                                    <br />\r\n                                    <br />\r\n                                    Voted for by: {twoVotes}\r\n                                    <br />\r\n                                    <br />\r\n                                    Out of {oneLengthNumber + twoLengthNumber} people who voted in this poll, {twoLengthNumber / (oneLengthNumber + twoLengthNumber) * 100 + \"%\"} chose this option!\r\n                                </button>\r\n                            </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n        </div>\r\n        )}\r\n        }}\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    unanswered: state.unanswered,\r\n    answered: state.answered,  \r\n    signup: state.signup, \r\n    questions: state.questions,\r\n    receive: state.receive\r\n}))(QuestionList)","export const SIGNIN = 'SIGNIN'\r\nexport const SIGNOUT = 'SIGNOUT'\r\n\r\nexport function signIn (user) {\r\n    return {\r\n        type: SIGNIN,\r\n        user\r\n    }\r\n}\r\n\r\nexport function signOut (user) {\r\n    return {\r\n        type: SIGNOUT,\r\n        user\r\n    }\r\n}","export const UNANSWERED = 'UNANSWERED'\r\n\r\nexport function unansweredQuestions (questionList, user, userList) {\r\n    return {\r\n        type: UNANSWERED,\r\n        questionList, user, userList\r\n    }\r\n}","export const ANSWERED = 'ANSWERED'\r\n\r\nexport function answeredQuestions (questionList, user, answeredQ) {\r\n    return {\r\n        type: ANSWERED,\r\n        questionList, user, answeredQ\r\n    }\r\n}","export const CREATE = 'CREATE'\r\nexport const ON_PAGE = 'ON_PAGE'\r\n\r\nexport function createUser (user) {\r\n    return {\r\n        type: CREATE,\r\n        user\r\n    }\r\n}\r\n\r\nexport function routing (page) {\r\n    return {\r\n        type: ON_PAGE,\r\n        page\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { routing } from '../actions/create'\r\nimport { signIn } from '../actions/signup'\r\nimport { unansweredQuestions } from '../actions/unanswered'\r\nimport { answeredQuestions } from '../actions/answered'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        x: 0,\r\n        y: 0,\r\n    }\r\n    createPage = () => {\r\n        this.props.dispatch(routing(true))\r\n    }\r\n    login = (e) => {\r\n        const user = document.getElementById(\"userList\").value\r\n        const toSend = this.props.receive.filter(x => x.id === user)\r\n        this.props.dispatch(signIn(toSend[0].id))\r\n        //Wait for user info before calling\r\n        setTimeout(() => {this.props.dispatch(unansweredQuestions(this.props.questions, user, this.props.receive))}, 100)\r\n        setTimeout(() => {this.props.dispatch(answeredQuestions(this.props.questions, user, this.props.receive))}, 200)\r\n        this.props.log()\r\n    }\r\n    handleMouseMove = (e) => {\r\n        this.setState({\r\n            x: e.clientX,\r\n            y: e.clientY\r\n        })\r\n    }\r\n    \r\n    render () { \r\n        //console.log(this.state.x)\r\n        const small = this.state.x / 40 - 20\r\n        const smallY = this.state.y / 40 - 20\r\n        const medium = this.state.x / 18 - 20\r\n        const mediumY = this.state.y / 18 - 40\r\n        const large = this.state.x / 12 - 50\r\n        const largeY = this.state.y / 12 - 50\r\n        const users = this.props.receive\r\n        return (\r\n            <div onMouseMove={this.handleMouseMove} style={{height: \"100vh\" ,overflow: \"hidden\"}} className=\"aligner\">\r\n                <div \r\n                style={{transform: `translate(${small}px, ${smallY}px)`, overflow: \"hidden\"}}\r\n                className=\"circleOne\"></div>\r\n                <div className=\"circleTwo\"\r\n                style={{transform: `translate(${medium}px, ${mediumY}px)`}}></div>\r\n                <div className=\"circleThree\"\r\n                style={{transform: `translate(${medium}px, ${mediumY}px)`}}></div>\r\n                <div className=\"circleFour\"\r\n                style={{transform: `translate(${medium}px, ${mediumY}px)`}}></div>\r\n                <div className=\"circleFive\"\r\n                style={{transform: `translate(${large}px, ${largeY}px)`}}></div>\r\n                <div className=\"circleSix\"></div>\r\n                <div className=\"circleSeven\"\r\n                style={{transform: `translate(${large}px, ${largeY}px)`}}></div>\r\n                <div className=\"circleEight\"\r\n                style={{transform: `translate(${large}px, ${largeY}px)`}}></div>\r\n                <div className=\"circleNine\"\r\n                style={{transform: `translate(${medium}px, ${mediumY}px)`}}></div>\r\n                <div className=\"circleTen\"\r\n                style={{transform: `translate(${large}px, ${largeY}px)`}}></div>\r\n                <div className=\"circleEleven\"\r\n                style={{transform: `translate(${medium}px, ${mediumY}px)`}}></div>\r\n\r\n\r\n                <div className=\"signUp\">\r\n                    <h1 className=\"head\">Would You Rather...</h1>\r\n                    <h1>SignIn</h1>\r\n                    <select id=\"userList\">\r\n                        \r\n                        {users.map(x => {\r\n                            return (\r\n                                <option \r\n                                key={x.id}\r\n                                value={x.id} \r\n                                >{x.id}</option>\r\n                                )\r\n                        })}\r\n\r\n                    </select>\r\n                    <div className=\"signIn\">\r\n                        <Link to=\"/create\">\r\n                            <button \r\n                            onClick={() => this.createPage()}\r\n                            className=\"button colorFive userC\">Create New User</button>\r\n                        </Link>\r\n                        <button className=\"button colorFive login\" onClick={(e) => this.login(e)}>Login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    signup: state.signup,\r\n    receive: state.receive,\r\n    questions: state.questions,\r\n    unanswered: state.unanswered,\r\n    answered: state.answered,\r\n}))(Login)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Error extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div>404 Error: page not found. Please sign in.</div>\r\n            <Link to=\"/\">\r\n                <button className=\"button\">Login Here</button>\r\n            </Link>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n\r\n}))(Error)","//import { saveQuestionAnswer } from '../utils/data'\r\nimport firebase from '../firebase'\r\nimport {updateData} from './receive'\r\nimport {getQues} from './questions'\r\nexport const PUSH_VOTE_TO_USER = 'PUSH_VOTE_TO_USER'\r\n\r\nfunction saveQuestionAns(answer) {\r\n    const itemsRef = firebase.database().ref('items')\r\n    const reference = itemsRef.child(answer.authedUser).child(answer.authedUser).child(\"answers\")\r\n    const newRef = reference.push();\r\n    const newKey = newRef.key\r\n    const realRef =  reference.child(answer.qid)\r\n    realRef.set(answer.answer)\r\n\r\n    const itemsRefTwo = firebase.database().ref('questions') \r\n    const referenceTwo = itemsRefTwo.child(answer.qid).child(answer.answer).child(\"votes\")\r\n    const newRefTwo = referenceTwo.push();\r\n    const newKeyTwo = newRefTwo.key\r\n    const realRefTwo =  referenceTwo.child(answer.authedUser)\r\n    realRefTwo.set(answer.answer)     \r\n}\r\n\r\nfunction voteHandle (answer) {\r\n    return {\r\n        type: PUSH_VOTE_TO_USER,\r\n        answer\r\n    }\r\n}\r\n\r\nexport function votes (answer) {\r\n    return (dispatch) => {\r\n        return Promise.all([saveQuestionAns(answer)])\r\n        .then(() => getQues())\r\n        .then(() => updateData())\r\n        .then((data) => dispatch(voteHandle(data)))\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nclass Err404 extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"error\">\r\n                404 error: Question not found.  Please enter a valid question ID.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Err404","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport dog from './images/avatars/dog.png';\r\nimport elephant from './images/avatars/elephant.png';\r\nimport monkey from './images/avatars/monkey.png';\r\nimport { votes, votesEdited } from '../actions/votes';\r\nimport { unansweredQuestions } from '../actions/unanswered';\r\nimport { answeredQuestions } from '../actions/answered';\r\nimport Err404 from './404'\r\n\r\nclass AnsweredLink extends React.Component {\r\n    state = {\r\n        answered: false\r\n    }\r\n    avatars = {\r\n        \"elephant\": elephant,\r\n        \"dog\": dog,\r\n        \"monkey\": monkey\r\n    }\r\n    pushVote = (e) => {\r\n        let selectedOpt = (Object.values(this.props.questions.filter(x => x[e.target.name])[0])[0].optionOne.text === e.target.value) ? 'optionOne' : 'optionTwo'\r\n        let opp = (Object.values(this.props.questions.filter(x => x[e.target.name])[0])[0].optionOne.text === e.target.value) ? 'optionTwo' : 'optionOne'\r\n \r\n        //const quesAuthor = Object.values(this.props.questions[0]).filter(x => x.id === this.props.match.params.value)\r\n        const theQues = Object.values(this.props.questions.filter(x => x[this.props.match.params.value])[0]) \r\n        const authorItem = this.props.receive.filter(x => x.id === theQues[0].author)\r\n        \r\n            const answer = {\r\n                authedUser: this.props.signup,\r\n                qid: e.target.name,\r\n                answer: selectedOpt,\r\n                opposite: opp\r\n            }\r\n            const myPromise = new Promise((res, rej) => {\r\n                res(this.props.dispatch(votes(answer)))\r\n            })\r\n            .then(() => this.props.dispatch(unansweredQuestions(this.props.questions, this.props.signup, this.props.receive)) )\r\n            .then(() => this.props.dispatch(answeredQuestions(this.props.questions, this.props.signup, this.props.receive)) )\r\n            .then(() =>  this.setState((prev) => ({answered: !prev.answered,})) )\r\n            .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    render() {      \r\n        const {questions, receive} = this.props\r\n        const value = this.props.match.params.value\r\n        const theQuestion = questions.filter(x => x[value])\r\n\r\n        if (theQuestion.length !== 0) {\r\n        const quesAuthor = Object.values(theQuestion[0])[0].author\r\n        console.log(quesAuthor)\r\n        const avatarURL = receive.filter( x => x.id === quesAuthor )[0].avatarURL\r\n        const author = quesAuthor\r\n        const avatar = this.avatars\r\n        const answeredQ = this.props.answered.filter(x => x.id === Object.values(theQuestion[0])[0].id)\r\n  \r\n            if (this.state.answered === false) {\r\n            return (\r\n            <div>\r\n                    <div className=\"author\">\r\n                        <h3>By {Object.values(theQuestion[0])[0].author} </h3>\r\n                        <img src={avatar[avatarURL]} alt=\"avatar\" />\r\n                    </div>\r\n                    <div key={Object.values(theQuestion[0])[0].id} className=\"map\">\r\n\r\n                    <button \r\n                        onClick={ (e) => this.pushVote(e) }\r\n                        value={Object.values(theQuestion[0])[0].optionOne.text}\r\n                        name={Object.values(theQuestion[0])[0].id}\r\n                        key={Object.values(theQuestion[0])[0].optionOne.text} \r\n                        className=\"cardMap\">\r\n                            {Object.values(theQuestion[0])[0].optionOne.text}\r\n                    </button>\r\n\r\n                    <button \r\n                        onClick={ (e) => this.pushVote(e) }\r\n                        value={Object.values(theQuestion[0])[0].optionTwo.text}\r\n                        name={Object.values(theQuestion[0])[0].id}\r\n                        key={Object.values(theQuestion[0])[0].optionTwo.text}  \r\n                        className=\"cardMap\">\r\n                            {Object.values(theQuestion[0])[0].optionTwo.text}\r\n                    </button>\r\n\r\n                </div>\r\n                </div>\r\n                )\r\n                } else {\r\n                const answeredVotesTwo = Object.keys(answeredQ[0].optionTwo.votes[0])\r\n                answeredVotesTwo.shift()\r\n                const answeredVotesOne = Object.keys(answeredQ[0].optionOne.votes[0])\r\n                answeredVotesOne.shift()\r\n\r\n                return (\r\n                <div className=\"indvCardAligner\">\r\n                    <div className=\"map\">\r\n                        <button \r\n                            name={answeredQ[0].id}\r\n                            value={answeredQ[0].optionOne.text}\r\n                            className={(answeredVotesOne.includes(this.props.signup)) ? \"cardMapGreen\" : \"cardMap\"}\r\n                        >\r\n                            {answeredQ[0].optionOne.text}\r\n                                <br />\r\n                                <br />\r\n                            Voted for by: \r\n                            {answeredVotesOne.map(x => {\r\n                                return <li key={x}>{x}</li>\r\n                            })}\r\n                                <br />\r\n                                <br />\r\n                            Out of {answeredVotesOne.length + answeredVotesTwo.length} people who voted in this poll, {answeredVotesOne.length / (answeredVotesOne.length + answeredVotesTwo.length) * 100 + \"%\"} chose this option!\r\n                        </button>\r\n\r\n                        <button \r\n                            name={answeredQ[0].id}\r\n                            value={answeredQ[0].optionTwo.text}\r\n                            className={(answeredVotesTwo.includes(this.props.signup)) ? \"cardMapGreen\" : \"cardMap\"}\r\n                        >\r\n                            {answeredQ[0].optionTwo.text}\r\n                            <br />\r\n                            <br />\r\n                        Voted for by: \r\n                        {answeredVotesTwo.map(x => {\r\n                            return <li key={x}>{x}</li>\r\n                        })}\r\n                            <br />\r\n                            <br />\r\n                            Out of {answeredVotesTwo.length + answeredVotesOne.length} people who voted in this poll, {answeredVotesTwo.length / (answeredVotesOne.length + answeredVotesTwo.length) * 100 + \"%\"} chose this option!\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n                )\r\n                } \r\n            } else {\r\n            return <Err404 />\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default connect((state) => ({\r\n    questions: state.questions,\r\n    receive: state.receive,\r\n    signup: state.signup,\r\n    answered: state.answered,\r\n}))(AnsweredLink)","import {getQues} from './questions'\r\nimport {getData} from './receive'\r\nimport firebase from '../firebase'\r\nimport {updateData} from './receive'\r\nexport const FORMAT = 'FORMAT'\r\nexport const QUES_CREATED = 'QUES_CREATED'\r\n\r\n\r\nfunction questionCreated(users) {\r\n  return {\r\n      type: QUES_CREATED,\r\n      users\r\n  }\r\n}\r\n\r\n//All to do with create new user\r\nexport function formattingEdit (ques, users, questions) {\r\n    return (dispatch) => {\r\n        return Promise.all([\r\n            makeArray(ques, users, questions)\r\n        ])\r\n        .then(() => {\r\n          //Tidy up \r\n            setTimeout(() => {\r\n              return Promise.all([updateData(), getQues()])\r\n              .then((users) => {\r\n                dispatch(questionCreated(users[0]))\r\n              })\r\n            }, 1000)\r\n        })\r\n    }\r\n}\r\n\r\nfunction makeArray (ques, users, questions) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = ques.author;\r\n        const formattedQuestion = formatQuestionEdit(ques);\r\n\r\n        setTimeout(() => {\r\n          const quesRef = firebase.database().ref('questions');\r\n          const refer = quesRef.push();\r\n          const theKey = refer.key\r\n          const realKey = quesRef.child(formattedQuestion.id)\r\n          realKey.set(formattedQuestion)\r\n\r\n          //push to users questions array - you are pushing formattedQuestion.id\r\n          const itemsRef = firebase.database().ref('items')\r\n          const reference = itemsRef.child(authedUser).child(authedUser).child(\"questions\")\r\n          reference.push(formattedQuestion.id)\r\n\r\n          res(formattedQuestion)\r\n        }, 500)\r\n    })\r\n}\r\nfunction formatQuestionEdit ({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n      id: (Math.random() * 100000).toFixed(0),\r\n      timestamp: Date.now(),\r\n      author,\r\n      optionOne: {\r\n        votes: {0: \"undefined\"},\r\n        text: optionOneText,\r\n      },\r\n      optionTwo: {\r\n        votes: {0: \"undefined\"},\r\n        text: optionTwoText,\r\n      }\r\n    }\r\n  }","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { formatting, formattingEdit } from '../actions/format'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { unansweredQuestions } from '../actions/unanswered'\r\nimport { answeredQuestions } from '../actions/answered'\r\n\r\n\r\nclass addQuestion extends React.Component {\r\n    state = {\r\n        optionOne: '',\r\n        optionTwo: '',\r\n        submitted: false,\r\n        btnPressed: false,\r\n    }\r\n    update = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault()\r\n        //console.log(this.props.receive.filter(x => x.id === this.props.signup))\r\n        if (this.state.optionOne.length > 1 && this.state.optionTwo.length > 1) {\r\n                const question = {\r\n                    optionOneText: this.state.optionOne,\r\n                    optionTwoText: this.state.optionTwo,\r\n                    author: this.props.signup,\r\n                }\r\n                this.setState((prev) => ({ btnPressed: !prev.btnPressed }))\r\n                const processQues = new Promise((res, rej) => {\r\n                    res(this.props.dispatch(formattingEdit(question, this.props.receive, this.props.questions)))\r\n                })\r\n                .then(() => this.props.dispatch(unansweredQuestions(this.props.questions, this.props.signup, this.props.receive)) )\r\n                .then(() => this.props.dispatch(answeredQuestions(this.props.questions, this.props.signup, this.props.receive)) )\r\n                .then(() => {\r\n                    setTimeout(() => {\r\n                        this.setState((prev) => ({\r\n                            submitted: !prev.submitted,\r\n                        }))\r\n                    }, 1000)\r\n                })\r\n        } else {\r\n            this.setState({\r\n                alert: 'Please fill in both fields'\r\n            })\r\n        }\r\n     }\r\n    render() {\r\n        return(\r\n            <div className=\"textCenter\">\r\n\r\n                {this.state.submitted === true &&\r\n                    <Redirect to=\"/\" />\r\n                }\r\n                <h2>Would you rather...</h2>\r\n\r\n                <form>\r\n                    <div className=\"add\">\r\n                        <input \r\n                        value={this.state.optionOne}\r\n                        onChange={(e) => this.update(e)}\r\n                        name=\"optionOne\"\r\n                        placeholder=\"Option one...\"></input>\r\n                        <input\r\n                        value={this.state.optionTwo}\r\n                        onChange={(e) => this.update(e)}\r\n                        name=\"optionTwo\"\r\n                        placeholder=\"Option Two...\"                    \r\n                        ></input>\r\n                    </div>\r\n                    <button \r\n                    type=\"submit\" \r\n                    className=\"button submit colorSix\"\r\n                    onClick={(e) => this.submit(e)}\r\n                    disabled={this.state.optionOne.length < 1 || this.state.optionTwo.length < 1 || this.state.btnPressed === true}\r\n                    >Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    signup: state.signup,\r\n    receive: state.receive,\r\n    questions: state.questions,\r\n}))(addQuestion)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport dog from './images/avatars/dog.png';\r\nimport elephant from './images/avatars/elephant.png';\r\nimport monkey from './images/avatars/monkey.png';\r\n\r\nclass board extends React.Component {\r\n    avatars = {\r\n        \"elephant\": elephant,\r\n        \"dog\": dog,\r\n        \"monkey\": monkey\r\n    }\r\n    render() {\r\n        const leaderBoard = this.props.receive.map(x => {\r\n            return {\r\n                \"name\": x.name,\r\n                \"avatar\": x.avatarURL,\r\n                \"ques\": Object.values(x.questions).length - 1,\r\n                \"ans\": Object.entries(x.answers).length - 1,\r\n                \"id\": x.id,\r\n                \"score\": (Object.values(x.questions).length - 1) + (Object.entries(x.answers).length - 1)\r\n                }\r\n            })\r\n        \r\n        const ordered = leaderBoard.sort(function(a, b){return b.score - a.score})\r\n        const avatar = this.avatars\r\n\r\n        return (\r\n            <div className=\"central\">\r\n                {ordered.map(x => {\r\n                    return (\r\n                        <div key={x.id} className=\"leader\">\r\n                            ID: {x.id}\r\n                            <br />\r\n                            <img alt=\"avatar\" className=\"image\" src={avatar[x.avatar]} />\r\n                            <br />\r\n                            Name: {x.name}\r\n                            <br />\r\n                            Overall score: {x.score}\r\n                            <br />\r\n                            Questions created: {x.ques}\r\n                            <br />\r\n                            Questions answered: {x.ans}\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    receive: state.receive,\r\n}))(board)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createUser } from '../actions/create'\r\nimport {getData} from '../actions/receive'\r\nimport { Link } from 'react-router-dom'\r\nimport { routing } from '../actions/create'\r\nimport { Redirect } from 'react-router-dom'\r\nimport dog from './images/avatars/dog.png';\r\nimport elephant from './images/avatars/elephant.png';\r\nimport monkey from './images/avatars/monkey.png';\r\nimport firebase from '../firebase'\r\n\r\n\r\nclass CreateUser extends React.Component {\r\n    state = {\r\n        name: '',\r\n        id: '',\r\n        avatar: '',\r\n        submitted: false,\r\n        alert: '',\r\n        nameclick: false,\r\n        idclick: false\r\n    }\r\n    create = () => {\r\n        if (this.state.avatar.length && this.state.name.length && this.state.id.length > 1) {\r\n            \r\n            const itemsRef = firebase.database().ref('items')\r\n            itemsRef.on('value', (snapshot) => {\r\n                let items = snapshot.val()\r\n                const person = items[this.state.id]\r\n                if (person === undefined) {\r\n                    const obj = {\r\n                        \"id\": this.state.id,\r\n                        \"name\": this.state.name,\r\n                        avatarURL: this.state.avatar\r\n                    }\r\n                    const ans = {\"123\": 'optionOne',}; const ques = [\"8xf0y6ziyjabvozdd253nd\"];\r\n                    const toPush = \r\n                    {[this.state.id]: { \r\n                        ...obj, \r\n                        answers: ans,\r\n                        questions: ques  \r\n                        } \r\n                    }\r\n                    new Promise((res, rej) => {\r\n                        const itemsRef = firebase.database().ref('items');\r\n                        const newRef = itemsRef.push();\r\n                        const newKey = newRef.key\r\n                        const realRef = itemsRef.child(this.state.id)\r\n                        res(realRef.set(toPush) )\r\n                    })\r\n                    .then(() => this.props.dispatch(getData()))\r\n                    .then(() => {\r\n                        this.setState((prev) => ({\r\n                            submitted: !prev.submitted,\r\n                        }))               \r\n                    }) \r\n                } else {\r\n                    this.setState({\r\n                        alert: 'This username is already taken, please select another.'\r\n                    })\r\n                }\r\n            })\r\n            /**/     \r\n        } else {\r\n            this.setState({\r\n                alert: \"Please fill in all fields before submitting.\"\r\n            })\r\n        }\r\n    }\r\n    update = (e) => {\r\n        console.log(e.target.id)\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    clicked = (e) => {\r\n        const value = e.target.id + \"click\"\r\n        this.setState((prev) => ({\r\n            [value]: !prev.value\r\n        }))\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(routing(true))\r\n\r\n        const itemsRef = firebase.database().ref('items')\r\n        itemsRef.on('value', (snapshot) => {\r\n            let items = snapshot.val()\r\n            let newState = []\r\n            console.log(Object.values(items))\r\n        })    \r\n    }\r\n    handleAvatar = (e) => {\r\n        this.setState({\r\n            avatar: e.target.id\r\n        })\r\n    }\r\n    render() {\r\n        const {name, id, avatar} = this.state;\r\n         return (\r\n         <div className=\"aligner\">\r\n            <div className=\"create\">\r\n                {this.state.submitted === true &&\r\n                    <Redirect to=\"/\" />\r\n                }\r\n                <h2>User Registration</h2>\r\n                {this.state.alert}\r\n                <span>\r\n                    <label>Name:</label>\r\n                    <input\r\n                    value={this.state.name}\r\n                    id=\"name\"\r\n                    className={this.state.name.length > 0 ? \"green\" : this.state.nameclick === false ? \"\" : \"red\"}\r\n                    onClick={(e) => this.clicked(e)}\r\n                    onChange={(e) => this.update(e)}\r\n                    ></input>\r\n\r\n                    <label>UserName:</label>\r\n                    <input\r\n                    value={this.state.id}\r\n                    id=\"id\"\r\n                    className={this.state.id.length > 0 ? \"green\" : this.state.idclick === false ? \"\" : \"red\"}\r\n                    onClick={(e) => this.clicked(e)}\r\n                    onChange={(e) => this.update(e)}\r\n                    ></input>\r\n\r\n                    <label>Select Your Avatar</label>\r\n                    <div className=\"selector\">\r\n                        <img alt=\"avatarOne\" onClick={(e) => this.handleAvatar(e)} id=\"dog\" className={(this.state.avatar === 'dog') ? \"selectGreen\" : \"select\"} src={dog} />\r\n                        <img alt=\"avatarTwo\" onClick={(e) => this.handleAvatar(e)} id=\"elephant\" className={(this.state.avatar === 'elephant') ? \"selectGreen\" : \"select\"}  src={elephant} />\r\n                        <img alt=\"avatarThree\" onClick={(e) => this.handleAvatar(e)} id=\"monkey\" className={(this.state.avatar === 'monkey') ? \"selectGreen\" : \"select\"}  src={monkey} />\r\n                    </div>\r\n\r\n                    <button \r\n                    onClick={() => this.create()}\r\n                    className={(name.length > 1 && id.length > 1 && avatar.length > 1) ? \"button blue\" : \"button blueOpaque\"}> \r\n                        Create My User\r\n                    </button>\r\n                    <Link to=\"/\">\r\n                        <button className=\"button blue\">\r\n                            Home\r\n                        </button>\r\n                    </Link>\r\n                </span>\r\n            </div>\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n\r\n}))(CreateUser)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getData } from '../actions/receive'\r\nimport { getQues } from '../actions/questions'\r\nimport { Route, Link, Redirect, useLocation, useHistory, HashRouter } from 'react-router-dom'\r\nimport HomeList from './answered'\r\nimport { signOut } from '../actions/signup'\r\nimport { unansweredQuestions } from '../actions/unanswered'\r\nimport { answeredQuestions } from '../actions/answered'\r\nimport '../index.css'\r\nimport Login from './login'\r\nimport Error from './error'\r\nimport AnsweredLink from './theLink'\r\nimport addQuestion from './addQuestion'\r\nimport board from './leaderboard'\r\nimport CreateUser from './create'\r\n\r\nfunction LoginPage() {\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n    let {from} = location.state || {from: {pathName: \"/\"}}\r\n    let login = () => {\r\n        history.replace(from)\r\n    } \r\n    return (\r\n        <Route exact path='/'>\r\n            <Login log={login} />    \r\n        </Route> \r\n    )\r\n}\r\n\r\nclass App extends React.Component {\r\n    componentDidMount () {\r\n        this.props.dispatch(getData())\r\n        this.props.dispatch(getQues())\r\n    }\r\n\r\n    logout = (e) => {\r\n        this.props.dispatch(signOut(null))\r\n        this.props.dispatch(unansweredQuestions(null))\r\n        this.props.dispatch(answeredQuestions(null))\r\n    }\r\n\r\n    render() {\r\n        const { signup, loading } = this.props\r\n        const PrivateRoute = ({ component: Component, ...rest }) => (\r\n            <Route {...rest} render={(props) => (\r\n              this.props.signup !== null\r\n                ? <Component {...props} />\r\n                : <Redirect to={{\r\n                    pathname: '/',\r\n                    state: { from: props.location }\r\n                  }} />\r\n            )} />\r\n        )\r\n        if (loading) {\r\n        return (\r\n            <HashRouter basename=\"/\">\r\n            <div className=\"aligner\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n            </HashRouter>\r\n            )\r\n        } else {       \r\n            console.log(\"TEST\", signup, this.props.create)\r\n            if (signup === null) {\r\n                return (      \r\n                    <HashRouter basename=\"/\">\r\n                    <div>\r\n                        <LoginPage />       \r\n                        <Route path='/create' component={CreateUser} />\r\n                        <PrivateRoute path=\"/leaderboard\" component={board} />\r\n                        <PrivateRoute path=\"/add\" component={addQuestion} />\r\n                        <PrivateRoute path='/question/:value' component={AnsweredLink} />\r\n                        {/* {this.props.create !== true && \r\n                            <Route path='/:value' component={Error} />\r\n                        } */}\r\n                    </div>\r\n                    </HashRouter> \r\n                )}      \r\n                else { \r\n                    return (\r\n                        <HashRouter basename=\"/\">\r\n                        <div> \r\n                            <div className=\"welcome\">\r\n                                <h1>Welcome {signup} </h1>\r\n                                <Link to=\"/\"><button className=\"button colorOne\">Home</button></Link>\r\n                                <Link to=\"/leaderboard\">\r\n                                    <button className=\"button colorTwo\">Leaderboard</button>\r\n                                </Link>\r\n                                <Link to=\"/add\">\r\n                                    <button className=\"button colorThree\">Add question</button>\r\n                                </Link>\r\n                                <Link to=\"/\">\r\n                                    <button className=\"button colorFour\" onClick={(e) => this.logout(e)}>Log Out</button>\r\n                                </Link>\r\n                            </div>\r\n                        \r\n                            <Route exact path='/' render={() => (         \r\n                                <div>\r\n                                  <HomeList />\r\n                                </div>\r\n                            )} />\r\n            \r\n                            <Route path='/question/:value' component={AnsweredLink} />\r\n                            <Route path='/add' component={addQuestion} />\r\n                            <Route path='/leaderboard' component={board} />\r\n                        </div>\r\n                    </HashRouter>\r\n                    )\r\n                }   \r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default connect((state) => ({\r\n    signup: state.signup,\r\n    receive: state.receive,\r\n    questions: state.questions,\r\n    unanswered: state.unanswered,\r\n    answered: state.answered,\r\n    loading: state.loading,\r\n    create: state.create\r\n}))(App)\r\n\r\n/*\r\nfunction LoginPage() {\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n    let {from} = location.state || {from: {pathName: \"/\"}}\r\n     return (\r\n        <Route exact path='/'>\r\n            <Login />    \r\n        </Route> \r\n    )\r\n}\r\n*/","import { combineReducers } from 'redux'\r\n\r\nimport signup from './signup'\r\nimport receive from './receive'\r\nimport loading from './loading'\r\nimport questions from './questions'\r\nimport unanswered from './unanswered'\r\nimport answered from './answered'\r\nimport create from './create'\r\n\r\nexport default combineReducers({\r\n    signup,\r\n    receive,\r\n    loading,\r\n    questions,\r\n    unanswered,\r\n    answered,\r\n    create,\r\n})","import { SIGNIN, SIGNOUT } from '../actions/signup'\r\n\r\nexport default function signup (state = null, action) {\r\n    switch (action.type) {\r\n        case SIGNIN :\r\n            return action.user\r\n        case SIGNOUT :\r\n            return action.user\r\n        default :\r\n            return state\r\n    }\r\n}","import { RECEIVE_DATA } from '../actions/receive'\r\nimport { PUSH_VOTE_TO_USER } from '../actions/votes'\r\nimport {QUES_CREATED} from '../actions/format'\r\n\r\nexport default function receive (state = [], action) {\r\n    switch(action.type) {\r\n        case RECEIVE_DATA :\r\n            return action.users\r\n        case QUES_CREATED :\r\n            return action.users\r\n        case PUSH_VOTE_TO_USER :\r\n            return action.answer\r\n        default :\r\n            return state\r\n    }\r\n}","import { RECEIVE_QUESTIONS } from '../actions/questions'\r\n\r\nexport default function loading (state = true, action) {\r\n    switch(action.type) {\r\n      case RECEIVE_QUESTIONS :\r\n        return false\r\n      default :\r\n        return state\r\n    }\r\n  } ","import { RECEIVE_QUESTIONS } from '../actions/questions'\r\nimport { PUSH_VOTE_TO_USER } from '../actions/votes'\r\nimport { FORMAT } from '../actions/format'\r\n\r\nexport default function questions (state = [], action) {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS :\r\n            console.log(\"receive questions reducer\")\r\n            //console.log(\"reducer\", state, action.questions.filter(x => x))\r\n            const newStat = action.questions\r\n            return newStat\r\n        default :\r\n            return state\r\n    }\r\n}\r\n","import { UNANSWERED } from '../actions/unanswered'\r\nimport { FORMAT } from '../actions/format'\r\n\r\nexport default function unanswered (state=[], action) {\r\n    switch(action.type) {\r\n        case UNANSWERED : \r\n            if (action.questionList !== null) {\r\n                //Getting the relevant user\r\n                let currentUserAnswers = action.userList.filter(x => x.id === action.user)\r\n                if (currentUserAnswers[0] !== undefined) {\r\n\r\n                //Ids of users answered questions\r\n                let userAnsList = Object.keys(currentUserAnswers[0].answers)\r\n\r\n                //Remove the default option from user answered list\r\n                //const userAnsListPop = userAnsList.filter(x => x !== \"123\")\r\n\r\n                let newQuestionList = []\r\n                const questionValues = action.questionList.map(x => Object.values(x)).flat()\r\n                //Returns the objects of unanswered questions and updates state\r\n                let notAnswered = userAnsList.map(y => {   \r\n                    if (newQuestionList.length === 0) {\r\n                        return newQuestionList = questionValues.filter(x => x.id !== y)\r\n                    } else {\r\n                        return newQuestionList = newQuestionList.filter(x => x.id !== y)\r\n                    }\r\n                })\r\n                let number = notAnswered.length - 1\r\n                //Returns array of not answered questions\r\n                //Ordering by timestamp\r\n                const times = notAnswered[number].sort((a, b) => b.timestamp - a.timestamp)\r\n                return times.flat()         \r\n                }\r\n            } else {\r\n                return state = []\r\n            }\r\n            break;\r\n        case FORMAT :\r\n            let oldList = [...action.question, ...state]\r\n            return oldList        \r\n        default :\r\n            return state\r\n    }\r\n}","import { ANSWERED } from '../actions/answered'\r\n\r\nexport default function answered (state=[], action) {\r\n    switch(action.type) {\r\n        case ANSWERED : \r\n             if (action.questionList !== null) {\r\n                const user = action.answeredQ.filter(x => x.id === action.user)[0].answers\r\n                //Filtering the relevant users answers for the default answer that is set when a user is created\r\n                const withoutDefault = Object.keys(user).filter(x => x !== \"123\")\r\n\r\n                const questionListValues = action.questionList.map(x => Object.values(x)).flat()\r\n                let a = withoutDefault.map(y => { \r\n                    return questionListValues.filter(x => {\r\n                    return x.id === y\r\n                })\r\n                })\r\n                //Ordering by timestamp\r\n                const times = a.flat().sort((a, b) => b.timestamp - a.timestamp)\r\n                return times.flat()\r\n            } else {\r\n                const emptyArray = []\r\n                return emptyArray\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import { ON_PAGE } from '../actions/create'\r\n\r\nexport default function create (state=null, action) {\r\n    switch (action.type) {\r\n        case ON_PAGE :\r\n            console.log(action.page)\r\n            return action.page\r\n        default :\r\n            return state\r\n    }\r\n}","import thunk from 'redux-thunk'\r\nimport {applyMiddleware} from 'redux'\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App'\r\nimport reducer from './reducers'\r\nimport middleware from './middleware'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst store = createStore(reducer, middleware)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}